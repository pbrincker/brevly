version: "3.8"

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: brevly-postgres
    environment:
      POSTGRES_DB: brevly
      POSTGRES_USER: brevly_user
      POSTGRES_PASSWORD: brevly_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - brevly-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U brevly_user -d brevly"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    container_name: brevly-backend
    environment:
      NODE_ENV: production
      PORT: 3333
      DATABASE_URL: postgresql://brevly_user:brevly_password@postgres:5432/brevly
      CLOUDFLARE_ACCOUNT_ID: ${CLOUDFLARE_ACCOUNT_ID}
      CLOUDFLARE_ACCESS_KEY_ID: ${CLOUDFLARE_ACCESS_KEY_ID}
      CLOUDFLARE_SECRET_ACCESS_KEY: ${CLOUDFLARE_SECRET_ACCESS_KEY}
      CLOUDFLARE_BUCKET: ${CLOUDFLARE_BUCKET}
      CLOUDFLARE_PUBLIC_URL: ${CLOUDFLARE_PUBLIC_URL}
    ports:
      - "3333:3333"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - brevly-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3333/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
      target: production
    container_name: brevly-frontend
    environment:
      VITE_FRONTEND_URL: http://localhost:3000
      VITE_BACKEND_URL: http://localhost:3333
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - brevly-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis para cache (opcional, para melhor performance)
  redis:
    image: redis:7-alpine
    container_name: brevly-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - brevly-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  brevly-network:
    driver: bridge
